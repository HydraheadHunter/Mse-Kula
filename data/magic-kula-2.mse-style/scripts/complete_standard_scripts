#symbol_pos		:=[ def: 			symbol_pos.def			
#			    leveler:			symbol_pos.def			
#			    adventure:			symbol_pos.def			
#			    kamigawa_flip:		symbol_pos.def			
#			    saga:	[symbol:	[two:	symbol_pos.def		
#							three:	symbol_pos.def		
#							four:	symbol_pos.def		
#					]						
#					no_symbol:	[two:	symbol_pos.def		
#							three:	symbol_pos.def		
#							four:	symbol_pos.def		
#					]						
#				]							
#			    planeswalker:		symbol_pos.planeswalker		
#			    tall_text:			symbol_pos.def			
#			    full_art:			symbol_pos.def			
#			    mutate:			symbol_pos.def			
#			    aftermath:			symbol_pos.def			
#			    split_fuse:			symbol_pos.split_fuse		
#			]

switch_symbol_pos	:=[ def: 		[	left:	{if input then symbol_pos.def.no_symbol.left 		else symbol_pos.def.symbol.left			}	]
			    planeswalker:	[	left:	{if input then symbol_pos.planeswalker.no_symbol.left	else symbol_pos.planeswalker.symbol.left	}	]
			    split_fuse:		[	left:	{if input then symbol_pos.split_fuse.no_symbol.left	else symbol_pos.split_fuse.symbol.left		}	]
			]
switch_symbol_pos	:=[ def: 			switch_symbol_pos.def			
			    leveler:			switch_symbol_pos.def			
			    adventure:			switch_symbol_pos.def			
			    kamigawa_flip:		switch_symbol_pos.def			
			    saga:	[	two:	switch_symbol_pos.def			
						three:	switch_symbol_pos.def			
						four:	switch_symbol_pos.def			
					]							
			    planeswalker:		switch_symbol_pos.planeswalker		
			    tall_text:			switch_symbol_pos.def			
			    full_art:			switch_symbol_pos.def			
			    mutate:			switch_symbol_pos.def			
			    aftermath:			switch_symbol_pos.def			
			    split_fuse:			switch_symbol_pos.split_fuse		
			]

switch_name_pos	:=[ def: 		[	left:	{if input then name_pos.def.no_symbol.left 		else name_pos.def.symbol.left			}	 
						right:	{ name_pos.def.symbol.right_max - input									}	]
		    planeswalker:	[	left:	{if input then name_pos.planeswalker.no_symbol.left	else name_pos.planeswalker.symbol.left		}	 
						right:	{ name_pos.planeswalker.symbol.right_max - input							}	]
		    split_fuse:		[	left:	{if input then name_pos.split_fuse.no_symbol.left	else name_pos.split_fuse.symbol.left		}	 
						right:	{ name_pos.split_fuse.symbol.right_max - input								}	]	]
switch_name_pos	:=[ def: 				switch_name_pos.def			
			    leveler:			switch_name_pos.def			
			    adventure:			switch_name_pos.def			
			    kamigawa_flip:		switch_name_pos.def			
			    saga:	[	two:	switch_name_pos.def			
						three:	switch_name_pos.def			
						four:	switch_name_pos.def			
					]							
			    planeswalker:		switch_name_pos.planeswalker		
			    tall_text:			switch_name_pos.def			
			    full_art:			switch_name_pos.def			
			    mutate:			switch_name_pos.def			
			    aftermath:			switch_name_pos.def			
			    split_fuse:			switch_name_pos.split_fuse		
			]

switch_cost_pos	:=[ def:		[	width: { max( cost_pos.def.width_min, input)  }	]
		    planeswalker:	[	width: { max( cost_pos.planeswalker.width_min)}	]
		    split_fuse:		[	width: { max( cost_pos.split_fuse.width_min)  }	]	]
switch_cost_pos	:=[ def: 			switch_cost_pos.def			
		    leveler:			switch_cost_pos.def			
		    adventure:			switch_cost_pos.def			
		    kamigawa_flip:		switch_cost_pos.def			
		    saga:	[	two:	switch_cost_pos.def			
					three:	switch_cost_pos.def			
					four:	switch_cost_pos.def			
				]							
		    planeswalker:		switch_cost_pos.planeswalker		
		    tall_text:			switch_cost_pos.def			
		    full_art:			switch_cost_pos.def			
		    mutate:			switch_cost_pos.def			
		    aftermath:			switch_cost_pos.def			
		    split_fuse:			switch_cost_pos.split_fuse		
			]


			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			